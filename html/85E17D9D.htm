<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Result.OfWithScope&lt;TValue&gt; Method</title><meta name="Title" content="OfWithScope&lt;TValue&gt;" /><meta name="Help.Id" content="M:Fluent.Calculations.Primitives.Result.OfWithScope``1(System.Linq.Expressions.Expression{System.Func{``0}},System.String,System.String,System.String)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Fluent.Calculations.Primitives" /><meta name="guid" content="85E17D9D" /><meta name="Description" content="Provides methods to execute simple ad-hoc calculations." /><meta name="tocFile" content="../toc/IDAFAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="/"><img alt="Logo" style="height: 64px; width: 64px;" src="../icons/fluent-calculations-logo-128x128.png" /></a></div><div id="DocumentationTitle" class="level-item">Fluent Calculations Primitives Class Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="HeaderTextContainer" class="level-left"><div class="level-item"><span class="has-text-grey-light">Test additional content header</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile toc-resizable"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="toc-resizer"></div><div id="TopicContent" class="column content is-7 toc-resizable-content"><h1>Result<span id="LST7B64956_0" data-languageSpecificText="cpp=::|nu=."></span>Of<wbr />With<wbr />Scope<span id="LST7B64956_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TValue</span><span id="LST7B64956_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Method</h1><div class="summary">Provides methods to execute simple ad-hoc calculations.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="D300CF95.htm">Fluent.Calculations.Primitives</a><br /><strong>Assembly:</strong> Fluent.Calculations.Primitives (in Fluent.Calculations.Primitives.dll) Version: 1.1.0-aplha<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/jitt-team/fluent-calculations-primitives/blob/main/src/Fluent.Calculations.Primitives/Result.cs#L20" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> TValue <span class="identifier">OfWithScope</span>&lt;TValue&gt;(
	<span class="identifier">Expression</span>&lt;<span class="identifier">Func</span>&lt;TValue&gt;&gt; <span class="parameter">lambdaExpression</span>,
	<span class="identifier">string</span> <span class="parameter">scopeName</span>,
	<span class="identifier">string</span> <span class="parameter">name</span> = "NaN",
	<span class="identifier">string</span> <span class="parameter">lambdaExpressionBody</span> = "NaN"
)
<span class="keyword">where</span> TValue : <span class="keyword">class</span>, <span class="keyword">new</span>(), <span class="identifier">IValueProvider</span>
</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">lambdaExpression</span>  <a href="https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1" target="_top" rel="noopener noreferrer">Expression</a><span id="LST7B64956_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.func-1" target="_top" rel="noopener noreferrer">Func</a><span id="LST7B64956_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TValue</span></span><span id="LST7B64956_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST7B64956_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>Expression to evaluate.</dd><dt class="has-text-weight-normal"><span class="parameter">scopeName</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_top" rel="noopener noreferrer">String</a></dt><dd>TBD</dd><dt class="has-text-weight-normal"><span class="parameter">name</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_top" rel="noopener noreferrer">String</a>  (Optional)</dt><dd>&gt;Name of resulting value, set by default to calling method or property name.</dd><dt class="has-text-weight-normal"><span class="parameter">lambdaExpressionBody</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_top" rel="noopener noreferrer">String</a>  (Optional)</dt><dd>Expression body, autmatically captured</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TValue</span></dt><dd>Type of result.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><span class="selflink"><span class="typeparameter">TValue</span></span><br />Evaluation result.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection">Temporary EvaluationScope will be created to evaluate the expression.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="5682A830.htm">Result Class</a></div><div><a href="D300CF95.htm">Fluent.Calculations.Primitives Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column">Test additional content footer<p><a href="https://github.com/jitt-team/fluent-calculations-primitives?tab=GPL-3.0-1-ov-file#readme" target="_blank" rel="noopener noreferrer">JITT Team 2024</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:team%40jitt.me?Subject=Fluent%20Calculations%20Primitives%20Class%20Library%20Documentation">team@jitt.me</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column">JITT Team is an ad-hoc team of .NET practitioners. 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>